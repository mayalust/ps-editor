<config defaultRouter = "true"
    injector="$scope,$rootScope,$q,$timeout,psCommand"
></config>
<template>
  <div>
    <div class="toppart">
      <button ng-disabled="!psCommand.dirty"
          ng-click="save()"
          class="btn-xs btn-success pull-right">
        保存
      </button>
      <button ng-disabled="waitings.length + commands.length == 0"
          ng-click="history($event)"
          class="btn-xs btn-default pull-right">
        历史
      </button>
      <button ng-disabled="waitings.length == 0"
          ng-click="redo()"
          class="btn-xs btn-default pull-right">
        重做
      </button>
      <button ng-disabled="commands.length == 0"
          ng-click="undo()"
          class="btn-xs btn-default pull-right">
        撤销
      </button>
      <button ng-click="preview()"
          class="btn-xs btn-info pull-right">
        预览
      </button>
      <button ng-click="setting()"
              class="btn-xs btn-default pull-right">
        全局设置
      </button>
    </div>
    <div class="leftpart">
      <free-board-left
          data-tools="tools">
      </free-board-left>
    </div>
    <div class="rightpart">
      <!--
      <free-board-preview
          data-options="options">
      </free-board-preview>-->
      <div class="free-board-wrap">
        <free-board
            data-options="options">
        </free-board>
      </div>
    </div>
  </div>
</template>
<script type="text/javascript">
  import { createDrop } from "../toolkit/widget.js";
  export default function(scope,rootScope,q,timeout,psCommand){
    scope.dirty = false;
    scope.tools = [{
      label : `输入框`,
      data : {
        type : `input`
      }
    }];
    scope.options = [{
      type : `row`,
      children : [{
        type : `col`,
        col : 3,
        children : [{
          type : `input`
        },{
          type : `input`
        }]
      },{
        type : `col`,
        col : 9,
        children : [{
          type : `input`
        }]
      }]
    },{
      type : `row`,
      children : [{
        type : `col`,
        col : 9,
        children : [{
          type : `input`
        },{
          type : `input`
        },{
          type : `input`
        }]
      },{
        type : `col`,
        col : 3,
        children : []
      }]
    }];
    function $render(){
      scope.commands = psCommand.commands();
      scope.waitings = psCommand.waitings();
    }
    function calcBasePoint(dom){
      var target = dom,
        x = target.offsetLeft,
        y = target.offsetTop;
      while(target = target.offsetParent){
        x += target.offsetLeft + target.clientLeft;
        y += target.offsetTop + target.clientTop - target.scrollTop;
      }
      return {
        x : x + dom.clientWidth,
        y : y + dom.clientHeight + dom.clientTop
      }
    }
    $render();
    scope.save = function(){
      scope.psCommand.dirty = false;
    }
    scope.psCommand = psCommand;
    scope.history = function(e){
      $render();
      let historys = [['打开视图']].concat(scope.commands).concat(scope.waitings).map((n, i) => {
          return {
            name : n[0],
            onclick : function(){
              scope.$apply(() => {
                psCommand.moveTo(i-1);
                $render();
                rootScope.$broadcast(`freeboard:changed`);
              })
            }
          }
        }),
        offsetLeft = 200,
        offset = calcBasePoint( e.currentTarget ),
        ins = createDrop(offset, historys, "right", scope.commands.length);
    }
    scope.undo = function(){
      psCommand.back();
      rootScope.$broadcast(`freeboard:changed`);
      $render();
    }
    scope.redo = function(){
      psCommand.forward();
      rootScope.$broadcast(`freeboard:changed`);
      $render();
    }
    rootScope.$on(`freeboard:col-adjusted`, () => {
      $render();
    });
    scope.setting = function(){

    }
    scope.preview = function(){

    }
  };
</script>
<style type="less">
  .toppart{
    position : absolute;
    height : 30px;
    width : 100%;
    background-color : #337ab7;
    .btn-xs {
      margin : 3px 10px 0 0;
      &[disabled]{
        color : #999;
        background-color : #ddd;
        &:hover{
          background-color : #ddd;
        }
      }
    }
  }
  .leftpart{
    position : absolute;
    width : 250px;
    top : 0;
    bottom : 0;
    left : 0;
  }
  .rightpart{
    position : absolute;
    right : 0;
    top : 60px;
    bottom : 0;
    left : 250px;
    overflow-x : hidden;
    overflow-y : auto;
    .free-board-wrap{
      position : absolute;
      width : ~'calc( 100vw - 265px )';
      top : 0;
      bottom : 0;
      left : 0;
    }
  }
</style>